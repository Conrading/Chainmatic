{"version":3,"sources":["component/http-axios.js","component/mainPlayer.js","component/status.js","component/chain.js","component/purchase.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","TestPlayer","props","state","importDB","currentDB","oddPlayList","evenPlayList","visible","playing","controls","light","muted","played","loaded","duration","loop","buttonPressed","filePressed","creator","desireTitle","linkAddress","selectedFile","uploadingStatus","startPlayUpdate","volumeUpdate","collaborationTitle","textRemark","playAll","bind","stopAll","flipbottom","settingVolume","fileSelection","handleFileUpload","uploadingProcess","resetAll","adjustingParameter","finalSubmit","duePlayer","React","createRef","http","get","then","res","console","log","setState","data","Object","keys","urlLastName","oddMemory","evenMemory","count","length","push","JSON","stringify","catch","err","this","e","parseFloat","target","value","arrayMemory","includes","index","indexOf","splice","files","preventDefault","updateArray","filter","s","find","a","title","formData","FormData","append","post","window","location","remainArray","setData","dynamicOddPlayer","map","items","className","ref","oddPlayer","onReady","seekTo","startPlay","url","source","width","height","volume","dynamicEvenPlayer","evenPlayer","dynemicButton","buttons","Button","outline","color","onClick","Container","Row","Col","f","Alert","Form","FormGroup","row","Label","sm","Input","type","onChange","placeholder","min","max","step","toFixed","Component","Status","userName","Email","Chain","Purchase","App","search","alert","xs","Nav","NavItem","to","NavLink","InputGroup","exact","path","component","MainPlayer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.958d23d4.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default axios.create({\n    baseURL: \"http://localhost:5011\",\n    headers: {\"Content-type\": \"application/json\",}\n});","import React, { Component } from \"react\";\nimport ReactPlayer from 'react-player';\nimport './mainPlayer.css'\nimport http from './http-axios'\nimport { Container, Button, Row, Input, Col, Form, FormGroup, Label, Alert } from 'reactstrap';\n\nclass TestPlayer extends Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            //we now extract from backend, but have not yet send to player, only separate two colume now\n            importDB: {}, //import whole data from backend as an object\n            currentDB: [], // for uploading and reading current buttons\n            oddPlayList: [], // separate renderingDB to odd colume\n            evenPlayList: [], // separate renderingDB to even colume\n\n            visible: false, // for toggle the bottom button\n\n            //player setting\n            playing: false,\n            controls: true,\n            light: false,\n            muted: false,\n            played: 0,\n            loaded: 0,\n            duration: 0,\n            loop: false,\n\n            //button selection\n            buttonPressed: false,\n            filePressed: [], //store which file is selected\n\n            // uploading part\n            creator: null,\n            desireTitle: null,\n            //dropDownValue: \"Select Type\", // video, audio and others\n            linkAddress: null,\n            selectedFile: null,\n            uploadingStatus: null,\n\n            // setting part\n            startPlayUpdate: null, // start time value\n            volumeUpdate: 0.3, // defualt value\n\n            collaborationTitle: null, //collaborationTitle\n            textRemark: null\n        }\n        \n        this.playAll = this.playAll.bind(this);\n        this.stopAll = this.stopAll.bind(this);\n        this.flipbottom = this.flipbottom.bind(this); // flip bottom\n        this.settingVolume = this.settingVolume.bind(this); // seek volume value\n        this.fileSelection = this.fileSelection.bind(this); // select file we want to replace or set\n        this.handleFileUpload = this.handleFileUpload.bind(this) // triggered when selecting file\n        this.uploadingProcess = this.uploadingProcess.bind(this) //uploading button trigger \n        this.resetAll = this.resetAll.bind(this)\n        this.adjustingParameter = this.adjustingParameter.bind(this) // parameter submit button\n        this.finalSubmit = this.finalSubmit.bind(this) //final uploading to real DB\n\n        this.duePlayer = React.createRef();\n        //this.triplePlayer = React.createRef();\n    }\n    componentDidMount () {\n        http.get(\"/\").then(res => {\n            console.log(res)\n            // extract from backend and store in importDB\n            this.setState({ importDB: res.data })\n            console.log(\"the collaboration name is: \" + Object.keys(this.state.importDB)[0])\n            var urlLastName = Object.keys(this.state.importDB)[0] //store latest collaboration name in var\n            this.setState({ currentDB: this.state.importDB[urlLastName]}) // get the latest collaboration\n            console.log(this.state.currentDB)\n            // separate odd colume and even colume\n            // if we want to extend to 3 rows, maybe we can add something like\n            // if (this.state.importDB.X92ndjfucso.length < 9) { then pass to this.duePlayer}\n            // else goes as below\n            const oddMemory = []\n            const evenMemory = []\n            let count = this.state.importDB[urlLastName].length //this.state.importDB.X92ndjfucso.length;\n            while (count--) {\n                if ( count % 2 === 0) {\n                    oddMemory.push(this.state.importDB[urlLastName][count])\n                    //oddMemory.push(this.state.importDB.X92ndjfucso[count])\n                } else { evenMemory.push(this.state.importDB[urlLastName][count]) } //evenMemory.push(this.state.importDB.X92ndjfucso[count])\n            }\n            this.setState({ oddPlayList: oddMemory, evenPlayList: evenMemory})\n            console.log(\"OK, this is our playlist: \" + JSON.stringify(this.state.oddPlayList) + JSON.stringify(this.state.evenPlayList))\n    \n        }).catch(err => console.log(\"Here is the error from axios: \", err))\n    }\n    stopAll() {\n        this.setState({ playing: false })\n      }\n      \n    playAll() {\n        this.setState({ playing: true })\n    }\n    flipbottom() { //flipping showing bottom\n        this.setState({visible: !this.state.visible})\n    }\n    settingVolume(e) { // seek volume value \n        this.setState({ volumeUpdate: parseFloat(e.target.value) })\n    }\n    fileSelection(e) {\n        //select file we want to replace or set\n        this.setState({ buttonPressed: !this.state.buttonPressed})\n        if (this.state.buttonPressed === true) {\n            const arrayMemory = this.state.filePressed\n            if (arrayMemory.includes(e.target.value) === false) { // if button never pressed before\n                arrayMemory.push(e.target.value)\n            }\n            this.setState({ filePressed: arrayMemory})\n            console.log(\"button select: \" + this.state.filePressed)\n        } else { // if button is de-selected\n            const arrayMemory = this.state.filePressed // import current array\n            const index = arrayMemory.indexOf(e.target.value) //check pressed button is in current array index\n            if (index > -1) { // if index == -1, means there is no pressed button\n                arrayMemory.splice(index, 1) // \"1\" here means replace, replace third parameter (which is null here) to array[index]  \n                this.setState({ filePressed: arrayMemory})\n                console.log(\"button select: \" + this.state.filePressed)\n            }\n        }\n    }\n    handleFileUpload(e) {\n        this.setState({ selectedFile: e.target.files[0] })\n    }\n    uploadingProcess(e) {//uploading button trigger\n        e.preventDefault();\n        // take down the selected file \n        // compare two array, and take out identical item\n        const updateArray = this.state.currentDB.filter(s => \n            !this.state.filePressed.find(a => a === s.title)\n        )\n        console.log(\"Array after taking down: \" + JSON.stringify(updateArray))\n        //then upload via Nodejs\n        const headers = { 'content-type': 'multipart/form-data' }\n        const formData = new FormData();\n        // verify whether there is link address input\n        if (this.state.linkAddress == null) {\n            // choose uploading file\n            formData.append('artist', this.state.creator)\n            formData.append('file', this.state.selectedFile) // uploading file itself\n            formData.append('title', this.state.desireTitle)\n            formData.append('type', \"video\")\n            formData.append('playlist', JSON.stringify(updateArray)) //send array after take down\n            console.log('now it is loading: ' + formData)\n            // upload file via axios\n            http.post(\"/playingVideo\", formData, {headers}).then(() => {\n                this.resetAll();\n            }).catch(err => {this.uploadingStatus = \"Failure !! \" + err})\n            } \n        else {\n            // choose Link\n            // create a new object and push onto original array on backend\n            updateArray.push({\n                \"artist\": this.state.creator,\n                \"source\": this.state.linkAddress,\n                \"type\": \"link\",\n                \"title\": this.state.desireTitle,\n                \"startPlay\": 0,\n                \"volume\": 0.5\n            })\n            console.log(\"if user goes for update by link: \" + JSON.stringify(updateArray))\n            formData.append('playlist', JSON.stringify(updateArray))\n            // upload update array via axios\n            http.post(\"/playingLink\", formData).then(() => {\n                this.resetAll();\n                window.location = '/'\n            }).catch(err => {this.uploadingStatus = \"Failure !! \" + err})\n            }\n        }\n    resetAll() {\n        this.setState({\n            creator: null,\n            linkAddress: null,\n            selectedFile: null,\n            uploadingStatus: null,  \n        })\n    }\n    adjustingParameter () {\n        // check which button is pressed\n        // take down the selected file \n        // compare two array, and take out identical item\n        const updateArray = this.state.currentDB.filter(s => \n            this.state.filePressed.find(a => a === s.title)\n        )\n        // compare two array, and keep unchange object\n        const remainArray = this.state.currentDB.filter(s => \n            !this.state.filePressed.find(a => a === s.title)\n        )\n        console.log(\"The file(s) user wants to set: \" + JSON.stringify(updateArray))\n        const setData = new FormData();\n        setData.append(\"startPlay\", this.state.startPlayUpdate)\n        setData.append(\"volume\", this.state.volumeUpdate)\n        setData.append(\"waitChange\", JSON.stringify(updateArray))\n        setData.append(\"unChange\", JSON.stringify(remainArray))\n        // upload file via axios\n        http.post(\"/updateParameter\", setData).then(() => {\n            this.resetAll();\n            window.location = '/'\n        }).catch(err => {this.uploadingStatus = \"Failure !! \" + err})\n    }\n    finalSubmit() {\n        console.log(\"upload to DB\")\n    }\n    render() {\n        // this is for odd colume player\n        let dynamicOddPlayer = this.state.oddPlayList.map((items) => {\n            return (\n                <ReactPlayer\n                key={items.source}\n                className=\"player-itself\"\n                ref={oddPlayer => (this.oddPlayer = oddPlayer)}\n                onReady={() => {this.oddPlayer.seekTo(parseFloat(items.startPlay))}} //set start time once it is ready\n                url= {items.source}\n                width='480px'\n                height='270px'\n                playing={this.state.playing}\n                volume={items.volume}\n                loop = {this.state.loop}\n                controls = {this.state.controls}\n                />)\n        })\n        //this is for even colume player\n        let dynamicEvenPlayer = this.state.evenPlayList.map((items) => {\n            return (\n                <ReactPlayer\n                key={items.source}\n                className=\"player-itself\"\n                ref={evenPlayer => (this.evenPlayer = evenPlayer)} //set this player ref\n                onReady={() => {this.evenPlayer.seekTo(parseFloat(items.startPlay))}} //set start time once it is ready\n                url= {items.source}\n                width='480px'\n                height='270px'\n                playing={this.state.playing}\n                volume={items.volume}\n                loop = {this.state.loop}\n                controls = {this.state.controls}\n                />)\n        })\n        // this generates dynemic buttons\n        let dynemicButton = this.state.currentDB.map((buttons) => {\n            return (\n                <Button outline color=\"success\"\n                    key={buttons.title}\n                    value={buttons.title}\n                    onClick={this.fileSelection}>{buttons.title}</Button>\n            )\n        })\n        return (\n            <Container>\n                <div ref={this.duePlayer}></div>\n                <div>\n                <Row className=\"general-position\"> \n                    <Col className='react-player'>{dynamicOddPlayer}</Col>\n                    <Col className='react-player'>{dynamicEvenPlayer}</Col>\n                </Row>\n                </div>\n                <Row className=\"general-position\">\n                    <Button \n                        outline color=\"primary\" \n                        className='button-play'\n                        onClick={this.playAll}>Play All</Button>\n                    <Button \n                        outline color=\"primary\" \n                        className='button-play'\n                        onClick={this.stopAll}>Stop All</Button>\n                </Row>\n                <Row className=\"general-position\">\n                    <Button outline className='button-flip' color=\"link\" onClick={this.flipbottom}>-- Flip to show more --</Button>\n                </Row>\n                {this.state.visible === true && //below is the flipping part\n                <Container>\n                <Row className=\"general-text\">1. You can choose the file you want to replace, or simply upload new file</Row>\n                <Row className=\"general-text\">2. Then you choose the file that you want to set start time and volume</Row>\n                <Row><Col className=\"center-object\">{dynemicButton}</Col></Row>\n                <Row className=\"general-text\">You have choosed: {this.state.filePressed.map((f) => {\n                    return (<div>* {f} *</div>)\n                })}</Row> \n                <Row>\n                    <Col className=\"uploading\">\n                        <Alert className=\"general-text\">Participate Your Work</Alert>\n                        <Form>\n                            <FormGroup row>\n                                <Label sm={3}>Creator</Label>\n                                <Col sm={8}>\n                                    <Input type=\"text\" \n                                        onChange={(e) => this.setState({ creator: e.target.value })}/>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label sm={3}>Desire Title</Label>\n                                <Col sm={8}>\n                                    <Input type=\"text\" \n                                        onChange={(e) => this.setState({ desireTitle: e.target.value })}/>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label sm={3}>Link</Label>\n                                <Col sm={8}>\n                                    <Input type=\"text\" \n                                        onChange={(e) => this.setState({ linkAddress: e.target.value })}/>\n                                </Col>\n                            </FormGroup>\n                            {/*\n                            <FormGroup row>\n                                <Label sm={2}>Type</Label>\n                                <Col sm={10}>\n                                    <select onChange={(e) => this.setState({ dropDownValue: e.target.value })}>\n                                        <option value=\"\">Selet Type</option>\n                                        <option value=\"Video\">Video</option>\n                                        <option value=\"Audio\">Audio</option>\n                                        <option value=\"Link\">Link</option>\n                                    </select>\n                                </Col>\n                            </FormGroup>\n                            */}\n                            {/*\n                            <FormGroup row >\n                                <Label sm={3}>File</Label>\n                                <Col sm={8}>\n                                    <input type=\"file\" name=\"singleFile\" onChange={this.handleFileUpload}/>\n                                </Col>\n                            </FormGroup>\n                            */}\n                            {/*\n                            <FormGroup row>\n                                <Label sm={2}>File</Label>\n                                <Col sm={10}>\n                                    <form action=\"/playing\" encType=\"multipart/form-data\" method=\"POST\">\n                                    <input type=\"file\" \n                                        name=\"singleFile\"\n                                        />\n                                    <input type=\"submit\" value=\"Upload a file\"/>\n                                    </form>\n                                </Col>\n                            </FormGroup>\n                            */}\n                        </Form>\n                        <div className=\"center-object\">\n                            <Button type=\"submit\" onClick={this.uploadingProcess}>Add/Replace</Button>\n                        </div>\n                        <div className=\"general-text\">{this.state.uploadingStatus}</div>\n                    </Col>\n                    <Col className=\"parameterSetting\">\n                        <Alert className=\"general-text\">Setting Start Time and Volume</Alert>\n                        <FormGroup row >\n                            <Label sm={4}>Start Time</Label>\n                            <Col sm={5}>\n                            <Input placeholder=\"song play at...\" \n                                    type='text'\n                                    onChange={(e) => {this.setState({startPlayUpdate: e.target.value})}}/>\n                            </Col>\n                            <Col sm={3}>\n                                <div className=\"instant-text\">{this.state.startPlayUpdate}</div>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row >\n                            <Label sm={4}>Volume</Label>\n                            <Col sm={5}>\n                                <Input type='range' min={0} max={1} \n                                    step='any' \n                                    value={this.state.volumeUpdate} \n                                    onChange={this.settingVolume} />\n                            </Col>\n                            <Col sm={3}>\n                                <div className=\"instant-text\">Current: {this.state.volumeUpdate.toFixed(1)}</div>\n                            </Col>\n                        </FormGroup>\n                        <Row>\n                        {/*\n                            <Col sm={2}>\n                                <InputGroupAddon addonType=\"prepend\" >\n                                    <InputGroupText>Start Time</InputGroupText>\n                                </InputGroupAddon>\n                            </Col>\n                            <Col sm={7}>\n                                <Input placeholder=\"song play at...\" \n                                        type='text'\n                                        onChange={(e) => {this.setState({startPlayUpdate: e.target.value})}}/>\n                            </Col>\n                            <Col sm={2}>\n                                <InputGroupAddon addonType=\"append\" >\n                                    <InputGroupText>{this.state.startPlayUpdate}</InputGroupText>\n                                </InputGroupAddon>\n                            </Col>\n                        */}\n                        </Row>\n                        <Row>\n                        {/*\n                            <Col sm={2}>\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>Volume</InputGroupText>\n                                </InputGroupAddon></Col>\n                            <Col sm={7}>\n                            <Input type='range' min={0} max={1} \n                                step='any' \n                                value={this.state.volumeUpdate} \n                                onChange={this.settingVolume} />\n                            </Col>\n                            <Col sm={2}>\n                                <InputGroupAddon addonType=\"append\">\n                                    <InputGroupText>Current: {this.state.volumeUpdate.toFixed(3)}</InputGroupText>\n                                </InputGroupAddon></Col>\n                        */}\n                        </Row>\n                        <div className=\"center-object\" onClick={this.adjustingParameter}><Button>Adjust Parameter</Button></div>\n                    </Col>\n                </Row>\n                        {/*\n                <Row className=\"center-object\"> \n                    <Col sm={3} className=\"general-text\">Collaboration Title</Col>\n                    <Col sm={5} className=\"general-text\">\n                    <Input  placeholder=\"Input your collaboration title before generating\" \n                            type='text'\n                            onChange={(e) => {this.setState({collaborationTitle: e.target.value})}}/>\n                    </Col>\n                </Row>\n                <Row className=\"center-object\"> \n                    <Col sm={3} className=\"general-text\">Introduction</Col>\n                    <Col sm={5} className=\"general-text\">\n                    <Input  placeholder=\"If you have additional introduction, please leave here\"\n                            type='textarea'\n                            onChange={(e) => {this.setState({textRemark: e.target.value})}}/>\n                    </Col>\n                </Row>\n                <Row className=\"center-object\">\n                    <Button className='button-flip' color=\"success\" onClick={this.finalSubmit}>Generate Collaboration</Button>\n                </Row>\n                        */}\n            </Container>}\n            </Container>\n        );\n    }\n}\n\n\nexport default TestPlayer;","import React, { Component } from \"react\";\nimport './status.css'\nimport { Input, Col, Container, Alert, Row } from 'reactstrap'\n\nclass Status extends Component {\n    constructor () {\n        super ();\n        this.state = {\n            userName: null,\n            Email: null\n        }\n    }\n    render () {\n        return (\n            <Container>\n                <Alert className=\"general-text\">\n                    Here we show the block that demostrating each desire collaboration that user initiate and the progress\n                </Alert>\n                <Row className=\"center-object\"> \n                    <Col sm={2} className=\"general-text\">Name</Col>\n                    <Col sm={5} className=\"general-text\">\n                    <Input  type='text'\n                            onChange={(e) => {this.setState({ userName: e.target.value})}}/>\n                    </Col>\n                </Row>\n                <Row className=\"center-object\">\n                    <Col sm={2} className=\"general-text\">Email</Col>\n                    <Col sm={5} className=\"general-text\">\n                    <Input  type=\"text\" \n                            onChange={(e) => this.setState({ Email: e.target.value })}/>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\nexport default Status;","import React, { Component } from \"react\";\nimport './chain.css'\nimport { Input, Col, Container, Alert, Row } from 'reactstrap'\n\nclass Chain extends Component {\n    constructor () {\n        super ();\n        this.state = {\n            userName: null,\n            Email: null\n        }\n    }\n    render () {\n        return (\n            <Container>\n                <Alert className=\"general-text\">\n                    Here we show other connection that each user has\n                </Alert>\n                <Row className=\"center-object\"> \n                    <Col sm={2} className=\"general-text\">Name</Col>\n                    <Col sm={5} className=\"general-text\">\n                    <Input  type='text'\n                            onChange={(e) => {this.setState({ userName: e.target.value})}}/>\n                    </Col>\n                </Row>\n                <Row className=\"center-object\">\n                    <Col sm={2} className=\"general-text\">Email</Col>\n                    <Col sm={5} className=\"general-text\">\n                    <Input  type=\"text\" \n                            onChange={(e) => this.setState({ Email: e.target.value })}/>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\nexport default Chain;","import React, { Component } from \"react\";\nimport './purchase.css'\nimport { Col, Container, Alert, Row } from 'reactstrap'\n\nclass Purchase extends Component {\n    constructor () {\n        super ();\n        this.state = {\n            userName: null,\n            Email: null\n        }\n    }\n    render () {\n        return (\n            <Container>\n                <Alert className=\"general-text\">\n                    Here we list all the marchendize\n                </Alert>\n                <Row>\n                    <Col>first product</Col>\n                    <Col>product detail</Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\nexport default Purchase;","import React, { Component } from 'react';\nimport MainPlayer from './component/mainPlayer'\nimport Status from './component/status'\nimport Chain from './component/chain'\nimport Purchase from './component/purchase'\nimport { Button, NavLink, InputGroup, Input, Container, Row, Col, Nav, NavItem } from 'reactstrap';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\n\n\nclass App extends Component {\n  constructor (props) {\n    super (props)\n    this.search = this.search.bind(this)\n  }\n  search () {\n    alert (\"Sorry, we are still working on this part\")\n  }\n  render () {\n    return (\n      <Router>\n      <Container>\n        <div>\n          <div className=\"main-page\">\n            <Row><p><h3>Silex | Oasis</h3></p></Row>\n          </div>\n          <Row>\n            <Col xs=\"7\">\n              <Nav>\n                <NavItem>\n                  <Link to={'/'} className=\"nav-link\">Main Page</Link>  \n                </NavItem>\n                <NavItem>\n                  <Link to={'/status'} className=\"nav-link\">Status</Link>\n                </NavItem>\n                <NavItem>\n                  <Link to={'/purchase'} className=\"nav-link\">Purchase</Link>\n                </NavItem>\n                <NavItem>\n                  <Link to={'/chain'} className=\"nav-link\">Chain</Link>\n                </NavItem>\n                <NavItem>\n                  <NavLink>Conversation</NavLink>\n                </NavItem>\n              </Nav>\n            </Col>\n            <Col>\n              <InputGroup>\n                <Input placeholder=\"search\" />\n              </InputGroup>\n            </Col>\n            <Col xs=\"2\">\n              <Button color=\"link\" onClick={this.search}>search</Button>\n            </Col>\n          </Row>\n          <hr />\n          <Switch>\n            <Route exact path='/' component={MainPlayer} />\n            <Route exact path='/status' component={Status} />\n            <Route exact path='/purchase' component={Purchase} />\n            <Route exact path='/chain' component={Chain} />\n          </Switch>\n        </div>\n        <div className=\"main-page\">\n          <h6>2020 Silex Oasis. All Rights Reserved</h6>\n        </div>\n      </Container>\n      </Router>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}